 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
		<groupId>DeepLearning</groupId>
		<artifactId>DeepLearningMainService</artifactId>
		<version>1.0.0</version>
		<relativePath>../DeepLearningMainService/pom.xml</relativePath>
	</parent>
   
   <groupId>DeepLearningRestModule</groupId>
   <artifactId>DeepLearningRestModule</artifactId>
   <version>4.0.0</version>
   <modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>

	<properties>
        <spring.version>3.2.5.RELEASE</spring.version>
        <logback.version>1.1.2</logback.version>
        <netty.version>4.0.28.Final</netty.version>
        <lombok.version>1.16.4</lombok.version>
        <nd4j.version>0.4.0</nd4j.version>
        <dl4j.version>0.4.0</dl4j.version>
        <scala.version>2.11.6</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <spark.version>1.5.2</spark.version>
        <jcommander.version>1.27</jcommander.version>
    </properties>
    
    <repositories>
      <repository>
        <id>cloudera.repo</id>
        <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
        <name>Cloudera Repositories</name>
        <snapshots>
          <enabled>false</enabled>
        </snapshots>
      </repository>
    </repositories>
    <!-- 
    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus snapshot repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>nexus-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
     --> 
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- 
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>org/datanucleus/**</exclude>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
			<!-- 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                       <phase>package</phase>
                       <goals>
                          <goal>shade</goal>
                       </goals>
                       <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                </transformer>
                            </transformers>
                       </configuration>
                    </execution>
                </executions>
                <configuration>
                   <outputFile>${project.build.directory}/${project.artifactId}-with-common-${project.version}.jar</outputFile> 
                   <minimizeJar>false</minimizeJar>
                   <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
                  
                   <artifactSet>
                      <includes>
                         <include>com.sun.jersey:jersey-bundle</include>
                         <include>com.sun.jersey:jersey-server</include>
                         <include>com.sun.jersey:jersey-core</include>
                         <include>asm:asm</include>
                         <include>org.json:json</include>
                      
                      </includes>
                   </artifactSet>
                   <relocations>
                      <relocation>
                         <pattern>com.sun.jersey</pattern>
                         <shadedPattern>com.sun.relocate.jersey</shadedPattern>
                      </relocation>
                   </relocations>
                    
                    <filters>
                       <filter>
                          <artifact>*:*</artifact>
                          <excludes>
                             <exclude>META-INF/license/**</exclude>
                             <exclude>META-INF/*</exclude>
                             <exclude>META-INF/maven/**</exclude>
                             <exclude>LICENSE</exclude>
                             <exclude>NOTICE</exclude>
                             <exclude>/*.txt</exclude>
                             <exclude>build.properties</exclude>
                         </excludes>
                     </filter>
                   </filters>
                </configuration>
            </plugin>
             -->
        </plugins>
    </build>
   <!-- 
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>nd4j-native</artifactId>
                <version>${nd4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>nd4j-cuda-7.5</artifactId>
                <version>${nd4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>nd4j-api</artifactId>
                <version>${nd4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
     -->
	<dependencies>
	    
        <dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
		</dependency>
	
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.9</version>  
		</dependency>

	
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		                
      
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.9</version>
		</dependency>
	 
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>1.9</version>
		</dependency>
		 
		 <!--  
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
           
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version> 

        </dependency>

        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native</artifactId>

        </dependency>
 
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>dl4j-spark_${scala.binary.version}</artifactId>
            <version>${dl4j.version}</version>

        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>

        </dependency>
 

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>${jcommander.version}</version>
 
        </dependency> 
        -->
	    <dependency>
		    <groupId>DeepLearningCoreModule</groupId>
		    <artifactId>DeepLearningCoreModule</artifactId>
		   <scope>compile</scope>
		     <exclusions>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-mllib_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.nd4j</groupId>
                    <artifactId>nd4j-native</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.deeplearning4j</groupId>
                    <artifactId>dl4j-spark_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.beust</groupId>
                    <artifactId>jcommander</artifactId>
                </exclusion>
             </exclusions>
		</dependency>

         

	</dependencies>
	 
</project>
